# # Retrieve ECMWF ERA Interim temperature data for calculating heat waves
# 

import numpy as np
import pandas as pd

from ecmwfapi import ECMWFDataServer
from config import DATA_SRC


output_file = DATA_SRC / 'weather' / 'ecmwf' / 'era_interim_temperature_2m.nc'


server = ECMWFDataServer()
server.retrieve({
    "class": "ei",
    "dataset": "interim",
    "date": "",
    "expver": "1",
    "grid": "0.75/0.75",
    "levtype": "sfc",
    "param": "167.128",
    "step": "0",
    "stream": "oper",
    "time": "06:00:00",
    "type": "an",
    "format": 'netcdf',
    "target": str(output_file),
})


server = ECMWFDataServer()


years = range(1980, 2016)
for year in years:
    rng = pd.date_range(f'{year}-01-01', f'{year}-03-1', freq='D').append(
           pd.date_range(f'{year}-06-01', f'{year}-08-31', freq='D'))
    dates = '/'.join((t.strftime('%Y-%m-%d') for t in rng))
    server.retrieve({
    "class": "ei",
    "dataset": "interim",
    "date": dates,
    "expver": "1",
    "grid": "0.75/0.75",
    "levtype": "sfc",
    "param": "167.128",
    "step": "0",
    "stream": "oper",
    "time": "00:00:00",
    "type": "an",
    "format": 'netcdf',
    "target": f"era_interim_summer_tmp_{year}.nc",
})





# # Drought exposure
# 
# A simple accepted measure for drought is the Standardized Precipitation Index (SPI).
# 
# Agnew, C.T., Using the SPI to identify drought, Drought Network News, 12, 6–12, 2000
# 
# propose SPI thresholds:
# 
# | SPI      | Category         |
# |----------|------------------|
# | >= -0.84 | Normal           | 
# | < -0.84  | Moderate Drought |
# | < -1.28  | Severe drought   | 
# | < -1.65  | Extreme drought  |
# 
# 
# For starters, use the NCAR global SPI file for 1949-2012. This means cutting off a bit relative to the 2015 cutoff for the other indicators, but saves re-generating an SPI from ERA (this would be desirable in the future).
# 
# Select the locations experiencing 'Severe' drought on the 3-month basis. Define the drought indicator as 'number of months in drought' for a given year.
# 
# 

get_ipython().magic('matplotlib inline')

from pathlib import Path
from datetime import date

import numpy as np
import scipy as sp
import pandas as pd
import xarray as xr
import matplotlib.pyplot as plt

import cartopy
from cartopy import crs

import geopandas as gpd 
from config import DATA_SRC,POP_DATA_SRC, ERA_MONTHLY_FILE, CLIMATOLOGY_FILE_RESAMP, SHAPEFILES_SRC
import weather_ecmwf
import util
import config

import climate_conversions
import population_tools


spi_file = DATA_SRC / 'weather' / 'spi3_6_12_1deg_cru_ts_3_21_1949_2012.nc'


spi = xr.open_dataset(str(spi_file))


spi


spi.spi3.mean(dim=['lat','lon']).plot()


droughts = spi.spi3.where(spi.spi3 < -1.28)


droughts = droughts.groupby('time.year').count(dim='time')
droughts = droughts.astype(np.float64)
droughts.name = 'n_severe_drought'


droughts.sum(dim=['lat', 'lon']).plot()


droughts.sel(year=2003).plot()


def get_drought_projection(droughts):
    with population_tools.PopulationProjector() as pop:
        years = list(range(2000,2013))
        def _gen():
            for year in years:
                print(year)
                yield pop.project(year, droughts.sel(year=year))
        droughts_pop = xr.concat(_gen(), dim='time')
        pop_sum = pop.data.population.sum(dim=['latitude', 'longitude'])
        return droughts_pop.compute(), pop_sum.compute()
    
droughts_pop, pop_sum = get_drought_projection(droughts)


droughts_pop_ts = (droughts_pop / pop_sum).sum(dim=['latitude', 'longitude'])


droughts_pop_ts.plot()





# # Extend the Temperature analysis using suitable datasets to get a trend over a long period (e.g. back to 1950)
# 
# 
# General plan
# 
# - repeat using NASA GISS and Peter's population data
# - adapt ERA approach to longer term by using same recent past base 1986-2008 but longer term population
# 

get_ipython().magic('matplotlib inline')
import numpy as np
import scipy as sp
import pandas as pd
import xarray as xr
import rasterio
from rasterio.io import MemoryFile
from rasterio.warp import reproject, Resampling
from affine import Affine

import population_tools
from config import DATA_SRC, POP_DATA_SRC


# NOTE: giss is already calculated as a temperature difference

nasa_giss_anom = DATA_SRC / 'weather' / 'nasa_giss' / 'air.2x2.1200.mon.anom.comb.nc'
nasa_giss = xr.open_dataset(str(nasa_giss_anom))


nasa_giss_cos_lat = xr.ufuncs.cos(xr.ufuncs.radians(nasa_giss.lat))
# summer_anom_ts = (summer_anom.sel(year=slice('2000','2016')) * cos_lat).mean(dim=['latitude', 'longitude'])



# clim_t = era_climatology.temperature_2m

# def sub_months(era_t_yr):
#     """Swap in the time axis so the datasets auto-align
#     """
#     clim_t['time'] = era_t_yr.time
#     return era_t_yr - clim_t
    
# delta_t = era_weather.temperature_2m.groupby('time.year').apply(sub_months)



def collect_summer_delta(delta_t):
    """Wrap in a function to clear temporary vars from memory"""
    # northern hemisphere
    lat_north = delta_t.lat[delta_t.lat >= 0]
    lat_south = delta_t.lat[delta_t.lat < 0]

    # Summer North
    summer_jja = delta_t['time.season'] == 'JJA'

    # Summer South
    summer_djf = delta_t['time.season'] == 'DJF'

    nh = delta_t.sel(time=summer_jja).groupby('time.year').mean(dim='time')
    sh = delta_t.sel(time=summer_djf).groupby('time.year').mean(dim='time')

    summer_anom = xr.concat([nh.sel(lat=lat_north),  
                             sh.sel(lat=lat_south)], dim='lat')
    return summer_anom

summer_anom = collect_summer_delta(nasa_giss.air)


summer_anom_ts = (summer_anom * nasa_giss_cos_lat).mean(dim=['lat', 'lon'])
summer_anom_ts.plot()


# ### Now project to population
# 




# ### Copied from Peter
# 





# Regrid temperature onto population grid
ntime=len(years_giss)
temp_pop_f=np.zeros(ntime)
temp_pop_i=np.zeros(ntime)
temp_area=np.zeros(ntime)
weight_area=np.cos(lats*np.pi/180.0)
# Calculate mean temperature exposure for human population
for itime in range(0, ntime):
    dTgiss=tmp[itime,:,:]
    dT = basemap.interp(dTgiss,lons_giss,lats_giss,                      lons,lats,checkbounds=False,masked=False,order=1)
    weight_pop_i=wt_pop[0,:,:]   
    weight_pop_f=wt_pop[npops-1,:,:]  
    temp_pop_i[itime]=sum(dT*weight_pop_i)/sum(weight_pop_i)   
    temp_pop_f[itime]=sum(dT*weight_pop_f)/sum(weight_pop_f)  
    temp_area[itime]=sum(dT*weight_area)/sum(weight_area)    








# # Select results for specific countries
# 
# 
# ## Method
# 
# Get a countries shapefile and use raserio to build masks for chosen areas.
# 

get_ipython().magic('matplotlib inline')

from pathlib import Path
from datetime import date

import rasterio
import numpy as np
import scipy as sp
import pandas as pd
import xarray as xr
import matplotlib.pyplot as plt
import cartopy.feature
import cartopy.crs as ccrs

from scipy import stats
from tqdm import tnrange, tqdm_notebook


import weather_ecmwf
import population_tools

from config import (DATA_SRC, ERA_MONTHLY_FILE, 
                    CLIMATOLOGY_FILE_MONTHLY, POP_DATA_SRC)


# TODO read the NE shapefile


# # Project NASA T anomaly onto population
# 
# - Use the NASA GISS temperature anomaly to get the exposure over a long period.
# - Problem is we don't have population pre 2000. Might be reasonable to back-interpolate at least to 1990, growth can be approximated to linear over that kind of time scale it seems.
# - 
# 

get_ipython().magic('matplotlib inline')
import numpy as np
import scipy as sp
import pandas as pd
import xarray as xr
import rasterio
import matplotlib.pyplot as plt
from rasterio.io import MemoryFile
from rasterio.warp import reproject, Resampling
from affine import Affine
from tqdm import tnrange, tqdm_notebook


import population_tools
from config import DATA_SRC, POP_DATA_SRC


nasa_giss_anom = DATA_SRC / 'weather' / 'nasa_giss' / 'air.2x2.1200.mon.anom.comb.nc'


nasa_giss = xr.open_dataset(str(nasa_giss_anom))
nasa_giss = nasa_giss.rename({'lon':'longitude', 'lat':'latitude'})
nasa_giss


def collect_summer_delta(delta_t):
    """Wrap in a function to clear temporary vars from memory"""
    # northern hemisphere
    lat_north = delta_t.latitude[delta_t.latitude >= 0]
    lat_south = delta_t.latitude[delta_t.latitude < 0]

    # Summer North
    summer_jja = delta_t['time.season'] == 'JJA'

    # Summer South
    summer_djf = delta_t['time.season'] == 'DJF'

    nh = delta_t.sel(time=summer_jja).groupby('time.year').mean(dim='time')
    sh = delta_t.sel(time=summer_djf).groupby('time.year').mean(dim='time')

    summer_anom = xr.concat([nh.sel(latitude=lat_north),  
                             sh.sel(latitude=lat_south)], dim='latitude')
    return summer_anom

summer_anom = collect_summer_delta(nasa_giss)


nasa_giss.mean(dim=['latitude', 'longitude']).air.plot()


summer_anom.mean(dim=['latitude', 'longitude']).air.plot()


# temperature = nasa_giss.air.groupby('time.year').mean(dim='time')


target = xr.open_dataset(str(POP_DATA_SRC / 'histsoc_population_0.5deg_1861-2005.nc'),                         )


with population_tools.PopulationProjector('histsoc_population_0.5deg_1861-2005_.nc', mask_empty=False) as pop:
    da = xr.DataArray(pop.water_mask, coords=[pop.data.latitude, pop.data.longitude])
    da.plot()


with population_tools.PopulationProjector('histsoc_population_0.5deg_1861-2005.nc') as pop:
    pop_mean = pop.data.mean(dim=['latitude', 'longitude'])
    pop_sum = pop.data.sum(dim=['latitude', 'longitude'])


    def _gen():
        for year in tnrange(2000,2017):
            yield pop.project(year, summer_anom.sel(year=year))

    summer_exposures = xr.concat(_gen(), dim='year')   


yr_exposures[0].plot(robust=True)


yr_exposures = xr.concat(yr_exposures, dim='time')
yr_exposures.name = 'year_mean_exposure'


yr_exposures.to_netcdf(str(DATA_SRC / 'lancet' / 'nasa_giss_yr_exposure.nc'))





# # Change in labor capacity associated with wet bulb temperature
# 
# 
# - Calculate WBT, WBGT for current and climatology
# - Calculate labour capacity
# - Project to RURAL population
# 
# 
# The labour capacity in percent (%) at a given location as a function of Wet Bulb Globe Temperature (WBGT) is
# 
# $$
# labour\;capacity = 100 - 25* \max(0, WBGT - 25)^{2/3}
# $$
# 
# Note that this number MUST be > 0, and could equally be defined as
# 
# 
# $$
# labour\;capacity = \max(0, 100 - 25* \max(0, WBGT - 25)^{2/3})
# $$
# 
# 
# The global capacity is then defined as:
# 
# $$
# global\;capacity(t) =  \frac{ \int labour\;capacity(x,t) * P(x,t)dx }{\int P(x,t) }
# $$
# 
# Where P is restricted to the rural population. This gives a scalar value for each year. To quantify where and how much of the global labour capacity is being lost at each location x, the lost labour is defined locally as :
# 
# $$
# lost\;labour( x , t ) = \frac{( 100 − labour\;capacity( x , t ) ) ∗ P ( x , t )}{\bar P(t) }
# $$
# 

get_ipython().magic('matplotlib inline')

from pathlib import Path
from datetime import date

import numpy as np
import scipy as sp
import pandas as pd
import geopandas as gpd 
import xarray as xr
import matplotlib.pyplot as plt
import cartopy.crs as ccrs

from scipy import stats
from tqdm import tnrange, tqdm_notebook

from config import DATA_SRC,POP_DATA_SRC , ERA_MONTHLY_FILE, CLIMATOLOGY_FILE_RESAMP, SHAPEFILES_SRC
import weather_ecmwf
import util
import config

import climate_conversions
import population_tools

def calculate_labour_capacity(wbgt):
    """NOTE: wbgt in Kelvin so have to adjust original formula"""
    labourcapacity = np.maximum(100 - 25 * np.power(np.maximum(wbgt - 273.15 - 25 , 0), (2/3)), 0)
    return labourcapacity


# ## Plot the labour capacity function
# 

_wbgt = np.arange(10, 40, 1)
labourcapacity = np.maximum(0, 100 - 25 * np.power(np.maximum(_wbgt - 25 , 0), (2/3)))
plt.plot(_wbgt, labourcapacity)
plt.xlabel('WBGT (K)')
plt.ylabel('%')


# ## Load urban/rural population ratio and associate with country shapes
# 

UN_DEMOGRAPHICS_TABLE = pd.read_csv(POP_DATA_SRC / 'UN' / 'urban_pop_percentage.csv', index_col='Country Code')
UN_DEMOGRAPHICS_TABLE = UN_DEMOGRAPHICS_TABLE.drop(['Index', 'Major area, region, country or area', 'Note'], axis=1)

country_shapefile = DATA_SRC / 'GIS' / 'world'/ 'ne_50m_admin_0_countries' / 'ne_50m_admin_0_countries.shp'

# COUNTRY_POLY_SHP
COUNTRIES = gpd.read_file(str(country_shapefile))
# Translate to match raster coordinates
COUNTRIES.geometry = COUNTRIES.translate(xoff=180)

# Remove missing UN A3 code fields, convert to int and set as index
COUNTRIES.loc[COUNTRIES.un_a3 == '-099', 'un_a3'] = np.nan
COUNTRIES.un_a3 = COUNTRIES.un_a3.astype(float)
COUNTRIES = COUNTRIES[np.isfinite(COUNTRIES.un_a3)]
COUNTRIES.un_a3 = COUNTRIES.un_a3.astype(int)
COUNTRIES = COUNTRIES.set_index('un_a3')


def get_country_demographics_for_year(year):
    base= 5
    closest_year = int(base * round(float(year)/base))

    rural = 100 - UN_DEMOGRAPHICS_TABLE[f'{closest_year}']
    rural /= 100
    countries = COUNTRIES.copy()
    countries['pct_rural'] = rural
    return countries


pct_rural_rasters = []
with population_tools.PopulationProjector() as pop:
    for year in tnrange(2000, 2017):
        countries = get_country_demographics_for_year(year)
        raster = pop.rasterize_data(countries, 'pct_rural')
        raster*= pop.water_mask.squeeze()
        raster /= 100
        raster.shape = (*raster.shape, 1)
        pct_rural_rasters.append(xr.DataArray(raster, 
                                        coords=[pop.data.latitude, pop.data.longitude, [year]], 
                                        dims=['latitude', 'longitude', 'year'], name='pct_rural'))
        
pct_rural_rasters = xr.concat(pct_rural_rasters, dim='year')


pct_rural_rasters.to_netcdf(str(DATA_SRC / 'lancet' / 'population_rural.nc'))


pct_rural_rasters = xr.open_dataarray(str(DATA_SRC / 'lancet' / 'population_rural.nc'))


pct_rural_rasters.mean(dim=['latitude', 'longitude']).plot()


# ### Load ERA weather and Calculate relative humidity, wbt, wbgt
# 

def get_wbgt():
    era_weather = weather_ecmwf.weather_dataset(ERA_MONTHLY_FILE)
#     era_weather = era_weather.sel(time=slice('2000','2016'))
    era_weather.load()
    era_weather['relative_humidity'] = climate_conversions.calculate_relative_humidity(era_weather.temperature_2m, 
                                                                                       era_weather.temperature_dewpoint)
    era_weather['wbt'] = climate_conversions.calculate_wbt(era_weather.temperature_2m, 
                                      era_weather.relative_humidity, 
                                      era_weather.surface_pressure)
    era_weather['wbgt'] = climate_conversions.calculate_wbgt(era_weather.temperature_2m, 
                                      era_weather.relative_humidity, 
                                      era_weather.surface_pressure)
    
    return era_weather['wbgt']


# ### Extract JJA/DJF summer months
# 

def get_summer_wbgt():
    weather = get_wbgt()
    # northern hemisphere
    lat_north = weather.latitude[weather.latitude >= 0]
    lat_south = weather.latitude[weather.latitude < 0]

    # Summer North
    summer_jja = weather.time[weather['time.season'] == 'JJA']


    # Summer South
    summer_djf = weather.time[weather['time.season'] == 'DJF']



    nh = weather.sel(time=summer_jja).groupby('time.year').mean(dim='time')
    sh = weather.sel(time=summer_djf).groupby('time.year').mean(dim='time')
    wgbt_summer = xr.concat([nh.sel(latitude=lat_north),  
                             sh.sel(latitude=lat_south)], dim='latitude')
    return wbgt_summer
    
wgbt_summer = get_summer_wbgt()


wgbt_summer.to_netcdf(str(DATA_SRC /'lancet' / 'summer_wbgt.nc'))


wgbt_summer = xr.open_dataarray(str(DATA_SRC / 'lancet' / 'summer_wbgt.nc'))


# ## Plot a global map of the change in summer mean WBGT relative to historical
# 

historical = wgbt_summer.sel(year= slice(1986, 2008)).mean(dim='year')
current = wgbt_summer.sel(year=slice(2000, 2016))

wbgt_change = current - historical.squeeze()


ax = plt.axes(projection=crs.PlateCarree())
historical.plot(ax=ax, transform=crs.PlateCarree())
ax.coastlines();


f = plt.figure()
ax = plt.axes(projection=crs.PlateCarree())
wbgt_change.sel(year=2015).plot(ax=ax, transform=crs.PlateCarree())
ax.coastlines()
f.set_size_inches(6.5,3)



wbgt_change.mean(dim=['latitude', 'longitude']).plot()
plt.ylabel('WBGT change (K)')
plt.savefig('wbgt_change.png', bbox_inches='tight')


# ## Calculate global labour capacity change relative 1986-2008 reference period
# 

labour_capacity = calculate_labour_capacity(wgbt_summer)
labour_capacity_historical = labour_capacity.sel(year=slice(1986, 2008)).mean(dim='year')
labour_delta = labour_capacity.sel(year=slice(2000, 2016)) - labour_capacity_historical


labour_delta.to_netcdf('labour_capacity_delta.nc')


labour_delta = xr.open_dataarray('labour_capacity_delta.nc')


# ### Get the area mean of the labour capacity
# 

cos_lat = xr.ufuncs.cos(xr.ufuncs.radians(labour_delta.latitude))
labour_capacity_ts = (labour_delta.sel(year=slice(2000,2016))).mean(dim=['latitude', 'longitude'])


labour_capacity_ts.plot()


labour_capacity_ts.name = 'labour_capacity'
labour_capacity_ts.to_netcdf(str(DATA_SRC /'lancet' / 'labour_capacity_ts.nc'))



year_data = labour_delta.sel(year=2016) - labour_delta.sel(year=2000)
year_data = year_data * population_tools.get_water_mask(year_data)
f = plt.figure(figsize=(6,3))

ax = plt.axes(projection=ccrs.PlateCarree())
year_data.plot.pcolormesh(ax=ax,
                          transform=ccrs.PlateCarree(),
                          cbar_kwargs=dict(label='Change in labour capacity (%)'),
                          cmap='RdBu'
                         )
ax.coastlines()
plt.tight_layout()
# plt.title('Change in Labour capacity loss 2000 to 2016')


f.savefig('labour_capacity_delta_change_2000-2016.png', dpi=300)
f.savefig('labour_capacity_delta_change_2000-2016.pdf')


# ## Project to the rural population
# 

def get_global_capacity(labour_capacity):

    with population_tools.PopulationProjector() as pop:
        rural_pop_sum = (pop.data * pct_rural_rasters).sum(dim=['latitude', 'longitude'])
            
        def _gen():
            for year in tnrange(2000,2017):
                yield pop.project(year, labour_capacity.sel(year=year)) * pct_rural_rasters.sel(year=year)
                
        global_capacity = xr.concat(_gen(), dim='year')

        global_capacity_ts = global_capacity.sum(dim=['latitude', 'longitude']) / rural_pop_sum
        global_capacity_ts.name = 'labour_capacity'
    return global_capacity_ts.compute()

global_capacity_ts = get_global_capacity(labour_delta)


global_capacity_ts.name = 'labour_capacity'
global_capacity_ts.to_netcdf(str(DATA_SRC/'lancet'/'labour_capacity.nc'))


global_capacity_ts = xr.open_dataarray(str(DATA_SRC/'lancet'/'labour_capacity.nc'))


global_capacity_ts.to_dataframe(name='labour_capacity_change').to_csv('global_labour_capacity_change.csv')


# labour_capacity_ts.plot(color='C1',label='Area weighted')
global_capacity_ts.plot(color='C0',label='Exposure weighted')
# mean_exposures_ts.plot(color='C9', label='Experienced, Year 2000 baseline')


# anom_reg = stats.linregress(labour_capacity_ts.year.values, labour_capacity_ts.values)
# anom_reg = (anom_reg.slope * labour_capacity_ts.year) + anom_reg.intercept

exposures_reg = stats.linregress(global_capacity_ts.year.values, global_capacity_ts.values)
exposures_reg = (exposures_reg.slope * global_capacity_ts.year) + exposures_reg.intercept

# anom_reg.plot.line('--', color='C1', label='Global trend')
exposures_reg.plot.line('-.', color='C0', label='Exposure trend')


plt.xlabel('Year')
plt.ylabel('Labour capacity change (%)')
plt.legend()
plt.savefig('labour_capacity_comp_2000-2016.png', dpi=300)
plt.savefig('labour_capacity_comp_2000-2016.pdf')





output = labour_capacity_ts.to_dataframe().join(global_capacity_ts.to_dataframe())
output.columns = ['Area weighted % change', 'Exposure weighted % change']

output.to_excel(str(DATA_SRC / 'lancet' / 'labour_capacity.xlsx'), sheet_name='labour_capacity_change')


# ## Calculate lost labour
# 
# This is for the map view
# 

def get_lost_capacity():
    years = list(range(2000,2016))

    with population_tools.PopulationProjector(population_tools.PopulationType.density.value) as pop:
        rural_pct_raster = pop.rasterize_data(countries, 'pct_rural')
        rural_pct_raster.shape = (*rural_pct_raster.shape, 1)
        rural_pop_mean = (pop.data.population * rural_pct_raster).mean(dim=['latitude', 'longitude'])
        rural_pop_sum = (pop.data.population * rural_pct_raster).sum(dim=['latitude', 'longitude'])


        def _gen():
            for year in years:
                print(year)
                yield pop.project(year, 100 - labour_capacity.sel(year=year))
        print('To DataArray')
        lost_capacity = xr.concat(_gen(), dim='time')

        lost_capacity = (lost_capacity * rural_pct_raster) / rural_pop_mean
        return lost_capacity.compute()

lost_capacity = get_lost_capacity()


lost_capacity.to_netcdf(str(DATA_SRC / 'lancet' / 'labour_capacity_loss_pop.nc'))


# ## Calculate lost labour in terms of equivalent number of people removed
# 

def get_global_capacity(labour_capacity):

    with population_tools.PopulationProjector() as pop:
        rural_pop_sum = (pop.data * pct_rural_rasters).sum(dim=['latitude', 'longitude'])
            
        def _gen():
            for year in tnrange(2000,2017):
                yield pop.project(year, labour_capacity.sel(year=year)) * pct_rural_rasters.sel(year=year)
                
        global_capacity = xr.concat(_gen(), dim='year')

        global_capacity_ts = global_capacity.sum(dim=['latitude', 'longitude']) / rural_pop_sum
        global_capacity_ts.name = 'labour_capacity'
    return global_capacity_ts.compute()



def get_lost_population(labour_anom):

    with population_tools.PopulationProjector() as pop:
        rural_pop_sum = (pop.data * pct_rural_rasters).sum(dim=['latitude', 'longitude'])
            
        def _gen():
            for year in tnrange(2000,2017):
                yield pop.project(year, labour_anom.sel(year=year)) * pct_rural_rasters.sel(year=year)
                
        global_capacity = xr.concat(_gen(), dim='year')

        global_capacity_ts = global_capacity.sum(dim=['latitude', 'longitude'])
        global_capacity_ts.name = 'labour_capacity'
    return global_capacity_ts.compute()


labour_delta_frac = (labour_delta / 100).copy()


lost_capacity_ts = get_lost_population(labour_delta_frac)


lost_capacity_ts.plot()
plt.ylabel('''Change in equivalent number of labourers''')

plt.savefig(str(COUNTRY_BRIEFS / 'labour_capacity' /'labourer_number_change.png'), bbox_inches='tight')


COUNTRY_BRIEFS = Path('./country_briefs')
lost_capacity_ts.to_dataframe().to_csv(COUNTRY_BRIEFS / 'labour_capacity' /'labourer_number_change.csv')





# # Reduce the resolution of the water mask to match the population
# 

get_ipython().magic('matplotlib inline')


import numpy as np
import pandas as pd
import rasterio
import xarray as xr
import matplotlib.pyplot as plt
from affine import Affine
from numba import jit
from rasterio import features
from rasterio.crs import CRS
from rasterio.enums import Resampling
from rasterio.warp import reproject

import population_tools
from config import POP_DATA_SRC



def derez_water_mask(file_path, n_iters=1):
    """
    Load water mask and invert such that land is true and water is false
    De rex the water mask by performing 'or' of alternate rows
    and columns such that any point where one square is water (false)
    and the other square is land (true) the resulting point is considered as
    land, since the population may be non-zero.
    
    This is a bit fancier than just performing a decimated read 
    (https://mapbox.github.io/rasterio/topics/resampling.html)
    with the aim of avoiding dropping bits of the population
    """
    with rasterio.open(str(file_path)) as pop:
        print(pop.meta)
        pop_meta = pop.meta
        trns = pop.transform
#         population = pop.read(1, masked=True)
        population = pop.read_masks(1)

        population = population.astype(bool)
    for i in range(n_iters):
        
        first = population[::2, :]
        second = population[1::2, :]
        if second.shape[0] < first.shape[0]:
            # missing a row, need to 'wrap'- just double the values from 'first' as an appoximation
            second = np.vstack((second, first[-1, :]))
        population = first | second
        # Sum every other column
        if second.shape[1] < first.shape[1]:
            # missing a row, need to 'wrap'- just double the values from 'first' as an appoximation
            second = np.hstack((second, first[:, -1]))
        first = population[:, ::2]
        second = population[:, 1::2]
        # population = population[:, ::2] + population[:, 1::2]
        population = first | second
        
        # Output affine scaled by 2
        trns = Affine(trns.a * 2, trns.b, trns.c, trns.d, trns.e * 2, trns.f)
        
    return population, trns, pop_meta
    # Reduction to 1/4 of the original size already makes life much easier


def save_population_geotiff(population, trns, pop_meta):
    print('Saving')
    print(population.shape)
    population = population.astype(float)


    with rasterio.open(str(POP_DATA_SRC / 'nasa_grid' / _POPULATION_PATH_TEMPLATE.format(resolution=REZ_FIX)),
                       'w',
                       driver='GTiff',
                       height=population.shape[0],
                       width=population.shape[1],
                       count=1,
                       dtype='float64',
                       crs=pop_meta['crs'],
                       transform=trns,
                       compress='lzw') as new_dataset:
        new_dataset.write(population, 1)


# REZ_FIX = 'eightres'
REZ_FIX = 'sixteenres'


_POPULATION_PATH_TEMPLATE = 'water_mask_{resolution}.tif'
input_file = POP_DATA_SRC / 'nasa_grid'/ 'gpw-v4-data-quality-indicators-water-mask' / 'gpw-v4-data-quality-indicators_water-mask.tif'
# input_file = (POP_DATA_SRC / 'nasa_grid'/ 'count'/
#               'gpw-v4-population-count-adjusted-to-2015-unwpp-country-totals-2000' / 
#               'gpw-v4-population-count-adjusted-to-2015-unwpp-country-totals_2000.tif')


population, trns, pop_meta = derez_water_mask(input_file, n_iters=4)


save_population_geotiff(population, trns, pop_meta)


file_path = POP_DATA_SRC / 'water_mask_sixteenres.tif'


with rasterio.open(str(file_path)) as pop:
    pop_mask = pop.read(1)
    plt.imshow(pop_mask)


target = xr.open_dataset(str(POP_DATA_SRC / 'histsoc_population_0.5deg_1861-2005.nc4'), 
                         decode_times=False
                        )
target = target.rename({'lon':'longitude', 'lat':'latitude'})
target


# file_path = POP_DATA_SRC / 'water_mask_eightres.tif'
file_path = POP_DATA_SRC / 'water_mask_sixteenres.tif'


with rasterio.open(str(file_path)) as pop:
    pop_mask = pop.read(1)
    aff = pop.transform
    newarr = np.empty(shape=(len(target.latitude),
                         len(target.longitude)))

    newaff = population_tools.get_affine(target)
    
    reproject(
        pop_mask, newarr,
        src_transform = aff,
        dst_transform = newaff,
        src_crs = pop.crs,
        dst_crs = pop.crs,
        resample = Resampling.bilinear)



plt.imshow(newarr)





# # Temperature change exposure using ERA weather and climatology, 2000-2015
# 
# - Project temperature changes between ERA interim and ERA climatology onto gridded population from NASA for 2000-2015
# - Calculate global average as sum of exposure divided by total population
# 
# ### Metric 1.1: Exposure to temperature change
# 
# The vulnerability to climate change is a function of the physical hazard (change in temperature, precipitation, humidity etc) and the number of (vulnerable) people exposed. A first order measure of exposure is defined here as:
# 
# 
# $$
# E(x,t) = \Delta T(x,t)P(x,t)
# $$
# 
# and the global average is
# 
# $$
# \bar{E} = \frac{\int \Delta T(x,t)P(x,t) dx}{\int P(x,t) dx}
# $$
# 
# Where $\Delta T(x,t)$ is the change in the summer mean temperature (Northern Hemisphere JJA, Southern Hemisphere DJF) at location x at time t from the recent historical summer mean (1986-2005). $P(x,t)$ is the population at location x at time t in millions.
# 
# The relative population density was also proposed to calculate the global mean values of exposure;
# 
# $$
#     E(x,t) = \frac{\Delta T(x,t)D(x,t)}{\bar D}
# $$
# 
# Where $D(x,t) = \tfrac{P(x,t)}{A(x)}$ is the population density at x at time t, and $\bar D$ is the global mean population density. This will result in the same qualitative conclusions as equation 1, but the units have been converted from Kelvin millions of people to Kelvin for the exposure maps.
# 
# **NOTE: The aim of this final indicator is to have an axis in Kelvin, and this is probably the most important one. The reason for this is that it makes it easy to have plots of the raw temperature change and the exposure change side by side and demonstrate with comparable axes that there is an important difference between the change in temperature and the change in temperature experienced by people**
# 
# 
# ### Updates/Clarifications to Method
# 
# Aim is to measure 'temperature change experienced by people'. End goal is a value in Kelvin which is the equivalent of the global mean temperature change but weighted by population
# 
# We operate on gridded data.
# 
# First, just multiply the temperature change by the number of people at each point (x) for a given time (t):
# 
# $$
# E(x,t) = \Delta T(x,t)P(x)
# $$
# 
# 
# We want to limit to the temperature change in the summer months for a given year, so first define all operations for a chosen year Y. The flobal $\Delta T(x,t)$ array is calculated by taking the mean temperature change for June, July, August for the northern hemisphere (latitude >= 0) and joining it with the array ofthe mean temperature change for December, January, February for the southern hemisphere (latitude < 0).
# 
# This gives a value in Kelvin x Npeople, which isn't hugely intuitive. When we take the global average with therefore divide by the total population for that year, $\sum P(x)$:
# 
# $$
# \bar{E} = \frac{\sum \Delta T(x,t)P(x,t)}{\sum P(x)}
# $$
# 
# This can be repeated for each year to get a time series. However, we'd also like to map the value for each year in a similarly intuitive way. We can do this using the mean population per grid point:
# 
# $$
# \bar{P} = \sum P(x) / N
# $$
# 
# And calculating the exposure at each point as the population divided by the mean population:
# 
# $$
# E(x,t) = \Delta T(x,t)P(x) / \bar{P}
# $$
# 
# The average of this value over the grid (with number of points N) is equal to the $\bar{E}$:
# 
# 
# $$
# Mean = \frac{\sum \Delta T(x,t)P(x,t) / \bar{P} }{N} \= \frac{\sum \Delta T(x,t)P(x,t) / (\sum P(x) / N) }{N} \= \frac{ \tfrac{N}{\sum P(x)} \sum \Delta T(x,t)P(x,t) }{N} \= \frac{ N   \sum \Delta T(x,t)P(x,t) }{N \sum P(x)} \= \frac{\sum \Delta T(x,t)P(x,t)}{\sum P(x)} = \bar{E} 
# $$
# 
# 
# #### Notes
# 
# Summer:
# 
# Northern Hemisphere JJA: June, July, August
# 
# Southern Hemisphere DJF: December, January, February
# 
# 

get_ipython().magic('matplotlib inline')

from pathlib import Path
from datetime import date

import rasterio
import numpy as np
import scipy as sp
import pandas as pd
import xarray as xr
import matplotlib.pyplot as plt
import cartopy.crs as ccrs

from scipy import stats
from tqdm import tnrange, tqdm_notebook


import weather_ecmwf
import population_tools

from config import (DATA_SRC, ERA_MONTHLY_FILE, 
                    CLIMATOLOGY_FILE_MONTHLY, POP_DATA_SRC)


# # Load weather
# 

era_weather = weather_ecmwf.weather_dataset(ERA_MONTHLY_FILE)
era_weather = era_weather.sel(time=slice('2000','2016'))


era_climatology = weather_ecmwf.climatology_dataset(CLIMATOLOGY_FILE_MONTHLY)


era_climatology.temperature_2m.sel(time='1999-01-01').plot()


# ## Get ∆T for each month of each year
# 
# - Group by time.year and apply subtraction for each month
# 

clim_t = era_climatology.temperature_2m

def sub_months(era_t_yr):
    """Swap in the time axis so the datasets auto-align
    """
    clim_t['time'] = era_t_yr.time
    return era_t_yr - clim_t
    
delta_t = era_weather.temperature_2m.groupby('time.year').apply(sub_months)


# Climate change in 2000
f = plt.figure(figsize=(6,3))

ax = plt.axes(projection=ccrs.PlateCarree())
delta_t.sel(time='2000').mean(dim='time').plot.pcolormesh(
    ax=ax,
    transform=ccrs.PlateCarree(),
    cbar_kwargs=dict(label='K'),
    cmap='RdBu_r',
    vmin=-6, vmax=6
)
ax.coastlines()
ax.set_title('Temperature change in 2000 \n relative to 1986-2008 mean')
plt.tight_layout()


# Climate change in 2016
f = plt.figure(figsize=(6,3))

ax = plt.axes(projection=ccrs.PlateCarree())
delta_t.sel(time='2016').mean(dim='time').plot.pcolormesh(
    ax=ax,
    transform=ccrs.PlateCarree(),
    cbar_kwargs=dict(label='K'),
    cmap='RdBu_r',
    vmin=-6, vmax=6
)
ax.coastlines()
ax.set_title('Temperature change in 2016 \n relative to 1986-2008 mean')
plt.tight_layout()
# f.savefig('temperature_change_delta_2000-2016.png')


# ## Get the mean delta for each summer
# 

def collect_summer_delta(delta_t):
    """Wrap in a function to clear temporary vars from memory"""
    # northern hemisphere
    lat_north = delta_t.latitude[delta_t.latitude >= 0]
    lat_south = delta_t.latitude[delta_t.latitude < 0]

    # Summer North
    summer_jja = delta_t['time.season'] == 'JJA'

    # Summer South
    summer_djf = delta_t['time.season'] == 'DJF'

    nh = delta_t.sel(time=summer_jja).groupby('time.year').mean(dim='time')
    sh = delta_t.sel(time=summer_djf).groupby('time.year').mean(dim='time')

    summer_anom = xr.concat([nh.sel(latitude=lat_north),  
                             sh.sel(latitude=lat_south)], dim='latitude')
    return summer_anom

summer_anom = collect_summer_delta(delta_t)


# ### Weight the gridded mean anomaly by the latitude and calculate the global mean
# 
# - It's important to weight the grid before calculating the mean to account for the change in area of grid units from the equator to the poles
# 

cos_lat = xr.ufuncs.cos(xr.ufuncs.radians(summer_anom.latitude))
summer_anom_ts = (summer_anom.sel(year=slice('2000','2016')) * cos_lat).mean(dim=['latitude', 'longitude'])


summer_anom_ts.plot()
plt.xlabel('Year')
plt.ylabel('Mean warming (K)')

plt.savefig('mean_warming_2000-2016.png', dpi=300)


# ## Save the area weighted time series
# 

summer_anom.name = 'summer_global'
summer_anom.to_netcdf(str(DATA_SRC /'lancet' / 'summer_global.nc'))

summer_anom_ts.name = 'summer_global'
summer_anom_ts.to_netcdf(str(DATA_SRC /'lancet' / 'summer_global_ts.nc'))


summer_anom = xr.open_dataarray(str(DATA_SRC /'lancet' / 'summer_global.nc'))


summer_anom_ts = xr.open_dataarray(str(DATA_SRC /'lancet' / 'summer_global_ts.nc'))


# ## Project summer anomaly to total population
# 

def _project_to_population(summer_anom):
    """Wrap in function to control memory use"""
    
    with population_tools.PopulationProjector('population_count_2000-2020.nc') as pop:
        pop_mean = pop.data.mean(dim=['latitude', 'longitude'])
        pop_sum = pop.data.sum(dim=['latitude', 'longitude'])

        def _gen():
            for year in tnrange(2000,2017):
                yield pop.project(year, summer_anom.sel(year=year))
                
        print('Combining')
        summer_exposures = xr.concat(_gen(), dim='year')   
        summer_exposures_ts = (summer_exposures / pop_sum).sum(dim=['latitude', 'longitude']).compute()
        summer_exposures = (summer_exposures / pop_mean).compute()
#         summer_exposures_ts['time'] = summer_exposures_ts['time.year']
        
        return summer_exposures, summer_exposures_ts


summer_exposures, summer_exposures_ts = _project_to_population(summer_anom)


# Plot, rolling the axes
summer_exposures = xr.open_dataarray(str(DATA_SRC /'lancet' / 'summer_exposure.nc'))
newlon = (summer_exposures.longitude - 180).copy()
summer_exposures = summer_exposures.roll(longitude=-len(summer_exposures.longitude)//2)
summer_exposures['longitude'] = newlon
summer_exposures.plot(robust=True,  col='time', col_wrap=4)
plt.savefig('summer_exposures_grid.png')


# ## Save/load the exposure time series
# 

summer_exposures.name = 'summer_exposure'
summer_exposures.to_netcdf(str(DATA_SRC /'lancet' / 'summer_exposure.nc'))

summer_exposures_ts.name = 'summer_exposure'
summer_exposures_ts.to_netcdf(str(DATA_SRC /'lancet' / 'summer_exposure_ts.nc'))


summer_exposures = xr.open_dataarray(str(DATA_SRC /'lancet' / 'summer_exposure.nc'))
summer_exposures_ts = xr.open_dataarray(str(DATA_SRC /'lancet' / 'summer_exposure_ts.nc'))


summer_exposures_ts.plot()
plt.xlabel('Year')
plt.ylabel('Mean warming exposure (K)')
plt.savefig('mean_warming_experienced_2000-2015.png', dpi=300)
plt.savefig('mean_warming_experienced_2000-2015.pdf', dpi=300)


# ## Plot the time series
# 

summer_exposures_ts.plot(color='C0',label='Exposure weighted')
summer_anom_ts.plot(color='C1',label='Area weighted')
# mean_exposures_ts.plot(color='C9', label='Experienced, Year 2000 baseline')

summer_anom_reg = stats.linregress(summer_anom_ts.year.values, summer_anom_ts.values)
summer_anom_reg = (summer_anom_reg.slope * summer_anom_ts.year) + summer_anom_reg.intercept

summer_exposures_reg = stats.linregress(summer_exposures_ts.year.values, summer_exposures_ts.values)
summer_exposures_reg = (summer_exposures_reg.slope * summer_exposures_ts.year) + summer_exposures_reg.intercept

summer_exposures_reg.plot.line('-.', color='C0', label='Exposure trend')
summer_anom_reg.plot.line('--', color='C1', label='Global trend')

plt.xlabel('Year')
plt.ylabel('Mean warming (˚C)')
plt.legend()
plt.savefig('mean_warming_experienced_2000-2016.png', dpi=300)
plt.savefig('mean_warming_experienced_2000-2016.pdf')


output = summer_anom_ts.to_dataframe().join(summer_exposures_ts.to_dataframe())
output.columns = ['Area weighted change K ', 'Exposure weighted change K']

output.to_excel(str(DATA_SRC / 'lancet' / 'temperature_change.xlsx'), sheet_name='temperature_change')


# #### Plot change relative to year 2000
# 

# summer_exposures_ts_rel_2000 = summer_exposures_ts - summer_exposures_ts[0]
# summer_anom_ts_rel_2000 = summer_anom_ts - summer_anom_ts[0]

# summer_exposures_ts_rel_2000.plot(color='C0', label='Exposure weighted')
# summer_anom_ts_rel_2000.plot(color='C1',label='Area weighted')
# # (mean_exposures_ts - mean_exposures_ts[0]).plot(color='C9', label='Year 2000 baseline')

# summer_anom_reg = stats.linregress(summer_anom_ts_rel_2000.year.values, summer_anom_ts_rel_2000.values)
# summer_anom_reg = (summer_anom_reg.slope * summer_anom_ts_rel_2000.year) + summer_anom_reg.intercept

# summer_exposures_reg = stats.linregress(summer_exposures_ts_rel_2000.time.values, summer_exposures_ts_rel_2000.values)
# summer_exposures_reg = (summer_exposures_reg.slope * summer_exposures_ts_rel_2000.time) + summer_exposures_reg.intercept

# summer_exposures_reg.plot.line('-.',color='C0', label='Exposure trend')
# summer_anom_reg.plot.line('--',color='C1', label='Global trend')

# plt.xlabel('Year')
# plt.ylabel('Mean change from 2000 (K)')
# plt.legend()
# plt.savefig('mean_warming_experienced_2000-2015_rel2000.png', dpi=300)


# ## Map plots
# 
# - Plot the indicator at start, end, and difference between the two
# 

def map_for_year(year):
    year_anom = summer_anom.sel(year=year)

    f = plt.figure(figsize=(6,3))

    ax = plt.axes(projection=ccrs.PlateCarree())
    year_anom.plot.pcolormesh(ax=ax,
                              transform=ccrs.PlateCarree(),
                              cbar_kwargs=dict(label='K'))
    ax.coastlines()
    plt.tight_layout()
    f.savefig(f'temperature_change_{year}.png')


# Plot summer climate change in 2016
f = plt.figure(figsize=(6,3))

ax = plt.axes(projection=ccrs.PlateCarree())
summer_anom.sel(year=2000).plot.pcolormesh(
    ax=ax,
    transform=ccrs.PlateCarree(),
    cbar_kwargs=dict(label='K'),
    cmap='RdBu_r',
    vmin=-6, vmax=6)
ax.coastlines()
ax.set_title('Summer temperature difference in 2000 \n relative to 1986-2008 mean')
plt.tight_layout()
f.savefig('summer_temperature_change_2000.png')


# Plot summer climate change in 2016
f = plt.figure(figsize=(6,3))

ax = plt.axes(projection=ccrs.PlateCarree())
summer_anom.sel(year=2016).plot.pcolormesh(
    ax=ax,
    transform=ccrs.PlateCarree(),
    cbar_kwargs=dict(label='K'),
    cmap='RdBu_r',
    vmin=-6, vmax=6)
ax.coastlines()
ax.set_title('Summer temperature difference in 2016 \n relative to 1986-2008 mean')
plt.tight_layout()
f.savefig('summer_temperature_change_2016.png')


year_anom_delta = summer_anom.sel(year=2016) - summer_anom.sel(year=2000)

f = plt.figure(figsize=(6,3))

ax = plt.axes(projection=ccrs.PlateCarree())
year_anom_delta.plot.pcolormesh(ax=ax,
                          transform=ccrs.PlateCarree(),
                          cbar_kwargs=dict(label='K'))
ax.coastlines()
ax.set_title('Summer temperature change \n difference between 2000 and 2016')
plt.tight_layout()
f.savefig('temperature_change_delta_2000-2016.png')


year_anom = summer_anom.sel(year=2016)

f = plt.figure(figsize=(6,3))

ax = plt.axes(projection=ccrs.PlateCarree())
year_anom.plot.pcolormesh(ax=ax,
                          transform=ccrs.PlateCarree(),
                          cbar_kwargs=dict(label='K'))
ax.coastlines()
plt.tight_layout()
f.savefig('temperature_change_2016.png')





# # Plot of base population grids
# 
# Plot the population distribution in 2000 and the change in 2015 relative to 2000
# 

get_ipython().magic('matplotlib inline')

from pathlib import Path
from datetime import date

import rasterio
import numpy as np
import scipy as sp
import pandas as pd
import xarray as xr
import geopandas as gpd 
import matplotlib.pyplot as plt
import cartopy.crs as ccrs
from scipy import stats
from affine import Affine

import weather_ecmwf
import population_tools

from config import (DATA_SRC, ERA_MONTHLY_FILE, 
                    CLIMATOLOGY_FILE_MONTHLY, POP_DATA_SRC)



with population_tools.PopulationProjector('population_count_2000-2020.nc',
                                    'water_mask_sixteenres.tif',
#                                           'water_mask_eightres.tif',
                                          mask_empty=True) as pop:
    first_year = pop.data.sel(year=2000).load().squeeze()
    final_year = pop.data.sel(year=2016).load().squeeze() 


first_year.sum(dim=['latitude', 'longitude'],skipna=True)





f = plt.figure()
f.set_size_inches(6.5,3)
ax = plt.axes(projection=ccrs.PlateCarree())
first_year.plot.pcolormesh(robust=True, ax=ax,
                transform=ccrs.PlateCarree())
ax.coastlines()
ax.set_title('Year 2000 population')
plt.tight_layout()
plt.show()
f.savefig('year_2000_population.png', dpi=300, bbox_inches='tight')


f = plt.figure()
f.set_size_inches(6.5,3)
ax = plt.axes(projection=ccrs.PlateCarree())
final_year.plot(robust=True, ax=ax,
                transform=ccrs.PlateCarree())
ax.coastlines()
ax.set_title('Year 20016 population')
plt.tight_layout()
plt.show()
f.savefig('year_2016_population.png', dpi=300, bbox_inches='tight')


pop_delta = final_year - first_year
pop_delta.name = 'Change in population'


f = plt.figure()
f.set_size_inches(6.5,3)
ax = plt.axes(projection=ccrs.PlateCarree())
pop_delta.plot(robust=True, ax=ax,
                transform=ccrs.PlateCarree())
ax.coastlines()
ax.set_title('Population change 2000 to 2016')
plt.tight_layout()
plt.show()
f.savefig('2000-2016_population_change.png', dpi=300, bbox_inches='tight')


with population_tools.PopulationProjector('population_density_2000-2020.nc', mask_empty=True) as pop:
    first_year = pop.data.sel(year=2000).load().squeeze()
    final_year = pop.data.sel(year=2016).load().squeeze() 


f = plt.figure()
f.set_size_inches(6.5,3)
ax = plt.axes(projection=ccrs.PlateCarree())

first_year.name = 'People/km2'
first_year.plot.pcolormesh(robust=True, ax=ax,
                transform=ccrs.PlateCarree())
ax.coastlines()
ax.set_title('Year 2000 population density')
plt.tight_layout()
plt.show()
f.savefig('year_2000_population_density.png', dpi=300, bbox_inches='tight')


f = plt.figure()
f.set_size_inches(6.5,3)
ax = plt.axes(projection=ccrs.PlateCarree())
final_year.name = 'People/km2'


final_year.plot(robust=True, ax=ax,
                transform=ccrs.PlateCarree())
ax.coastlines()
ax.set_title('Year 2016 population density')
plt.tight_layout()
plt.show()
f.savefig('year_2016_population_density.png', dpi=300, bbox_inches='tight')


pop_delta = final_year - first_year
pop_delta.name = 'Change in density (people/km2)'
f = plt.figure()
f.set_size_inches(6.5,3)
ax = plt.axes(projection=ccrs.PlateCarree())
pop_delta.plot(robust=True, ax=ax,
                transform=ccrs.PlateCarree())
ax.coastlines()
ax.set_title('Population density change 2000 to 2016')
plt.tight_layout()
plt.show()
f.savefig('2000-2016_population_density_change.png', dpi=1000, bbox_inches='tight')





